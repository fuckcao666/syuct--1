/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.server.transport.coap.config.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroCoapConfig extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroCoapConfig\",\"namespace\":\"org.kaaproject.kaa.server.transport.coap.config.gen\",\"fields\":[{\"name\":\"bindInterface\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"bindPort\",\"type\":\"int\"},{\"name\":\"publicInterface\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"publicPort\",\"type\":\"int\"},{\"name\":\"maxBodySize\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String bindInterface;
   private int bindPort;
   private java.lang.String publicInterface;
   private int publicPort;
   private int maxBodySize;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public AvroCoapConfig() {}

  /**
   * All-args constructor.
   */
  public AvroCoapConfig(java.lang.String bindInterface, java.lang.Integer bindPort, java.lang.String publicInterface, java.lang.Integer publicPort, java.lang.Integer maxBodySize) {
    this.bindInterface = bindInterface;
    this.bindPort = bindPort;
    this.publicInterface = publicInterface;
    this.publicPort = publicPort;
    this.maxBodySize = maxBodySize;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bindInterface;
    case 1: return bindPort;
    case 2: return publicInterface;
    case 3: return publicPort;
    case 4: return maxBodySize;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bindInterface = (java.lang.String)value$; break;
    case 1: bindPort = (java.lang.Integer)value$; break;
    case 2: publicInterface = (java.lang.String)value$; break;
    case 3: publicPort = (java.lang.Integer)value$; break;
    case 4: maxBodySize = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bindInterface' field.
   */
  public java.lang.String getBindInterface() {
    return bindInterface;
  }

  /**
   * Sets the value of the 'bindInterface' field.
   * @param value the value to set.
   */
  public void setBindInterface(java.lang.String value) {
    this.bindInterface = value;
  }

  /**
   * Gets the value of the 'bindPort' field.
   */
  public java.lang.Integer getBindPort() {
    return bindPort;
  }

  /**
   * Sets the value of the 'bindPort' field.
   * @param value the value to set.
   */
  public void setBindPort(java.lang.Integer value) {
    this.bindPort = value;
  }

  /**
   * Gets the value of the 'publicInterface' field.
   */
  public java.lang.String getPublicInterface() {
    return publicInterface;
  }

  /**
   * Sets the value of the 'publicInterface' field.
   * @param value the value to set.
   */
  public void setPublicInterface(java.lang.String value) {
    this.publicInterface = value;
  }

  /**
   * Gets the value of the 'publicPort' field.
   */
  public java.lang.Integer getPublicPort() {
    return publicPort;
  }

  /**
   * Sets the value of the 'publicPort' field.
   * @param value the value to set.
   */
  public void setPublicPort(java.lang.Integer value) {
    this.publicPort = value;
  }

  /**
   * Gets the value of the 'maxBodySize' field.
   */
  public java.lang.Integer getMaxBodySize() {
    return maxBodySize;
  }

  /**
   * Sets the value of the 'maxBodySize' field.
   * @param value the value to set.
   */
  public void setMaxBodySize(java.lang.Integer value) {
    this.maxBodySize = value;
  }

  /** Creates a new AvroCoapConfig RecordBuilder */
  public static org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder newBuilder() {
    return new org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder();
  }
  
  /** Creates a new AvroCoapConfig RecordBuilder by copying an existing Builder */
  public static org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder newBuilder(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder other) {
    return new org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder(other);
  }
  
  /** Creates a new AvroCoapConfig RecordBuilder by copying an existing AvroCoapConfig instance */
  public static org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder newBuilder(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig other) {
    return new org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroCoapConfig instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroCoapConfig>
    implements org.apache.avro.data.RecordBuilder<AvroCoapConfig> {

    private java.lang.String bindInterface;
    private int bindPort;
    private java.lang.String publicInterface;
    private int publicPort;
    private int maxBodySize;

    /** Creates a new Builder */
    private Builder() {
      super(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bindInterface)) {
        this.bindInterface = data().deepCopy(fields()[0].schema(), other.bindInterface);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bindPort)) {
        this.bindPort = data().deepCopy(fields()[1].schema(), other.bindPort);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.publicInterface)) {
        this.publicInterface = data().deepCopy(fields()[2].schema(), other.publicInterface);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publicPort)) {
        this.publicPort = data().deepCopy(fields()[3].schema(), other.publicPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.maxBodySize)) {
        this.maxBodySize = data().deepCopy(fields()[4].schema(), other.maxBodySize);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AvroCoapConfig instance */
    private Builder(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig other) {
            super(org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.SCHEMA$);
      if (isValidValue(fields()[0], other.bindInterface)) {
        this.bindInterface = data().deepCopy(fields()[0].schema(), other.bindInterface);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bindPort)) {
        this.bindPort = data().deepCopy(fields()[1].schema(), other.bindPort);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.publicInterface)) {
        this.publicInterface = data().deepCopy(fields()[2].schema(), other.publicInterface);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.publicPort)) {
        this.publicPort = data().deepCopy(fields()[3].schema(), other.publicPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.maxBodySize)) {
        this.maxBodySize = data().deepCopy(fields()[4].schema(), other.maxBodySize);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'bindInterface' field */
    public java.lang.String getBindInterface() {
      return bindInterface;
    }
    
    /** Sets the value of the 'bindInterface' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder setBindInterface(java.lang.String value) {
      validate(fields()[0], value);
      this.bindInterface = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'bindInterface' field has been set */
    public boolean hasBindInterface() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'bindInterface' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder clearBindInterface() {
      bindInterface = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'bindPort' field */
    public java.lang.Integer getBindPort() {
      return bindPort;
    }
    
    /** Sets the value of the 'bindPort' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder setBindPort(int value) {
      validate(fields()[1], value);
      this.bindPort = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'bindPort' field has been set */
    public boolean hasBindPort() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'bindPort' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder clearBindPort() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'publicInterface' field */
    public java.lang.String getPublicInterface() {
      return publicInterface;
    }
    
    /** Sets the value of the 'publicInterface' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder setPublicInterface(java.lang.String value) {
      validate(fields()[2], value);
      this.publicInterface = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'publicInterface' field has been set */
    public boolean hasPublicInterface() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'publicInterface' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder clearPublicInterface() {
      publicInterface = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'publicPort' field */
    public java.lang.Integer getPublicPort() {
      return publicPort;
    }
    
    /** Sets the value of the 'publicPort' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder setPublicPort(int value) {
      validate(fields()[3], value);
      this.publicPort = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'publicPort' field has been set */
    public boolean hasPublicPort() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'publicPort' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder clearPublicPort() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'maxBodySize' field */
    public java.lang.Integer getMaxBodySize() {
      return maxBodySize;
    }
    
    /** Sets the value of the 'maxBodySize' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder setMaxBodySize(int value) {
      validate(fields()[4], value);
      this.maxBodySize = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'maxBodySize' field has been set */
    public boolean hasMaxBodySize() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'maxBodySize' field */
    public org.kaaproject.kaa.server.transport.coap.config.gen.AvroCoapConfig.Builder clearMaxBodySize() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public AvroCoapConfig build() {
      try {
        AvroCoapConfig record = new AvroCoapConfig();
        record.bindInterface = fieldSetFlags()[0] ? this.bindInterface : (java.lang.String) defaultValue(fields()[0]);
        record.bindPort = fieldSetFlags()[1] ? this.bindPort : (java.lang.Integer) defaultValue(fields()[1]);
        record.publicInterface = fieldSetFlags()[2] ? this.publicInterface : (java.lang.String) defaultValue(fields()[2]);
        record.publicPort = fieldSetFlags()[3] ? this.publicPort : (java.lang.Integer) defaultValue(fields()[3]);
        record.maxBodySize = fieldSetFlags()[4] ? this.maxBodySize : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
